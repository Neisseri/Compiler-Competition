--------------------------- building ast ---------------------------
parse tree: 
(compUnit 
        (compUnitItem 
            (funcDef 
                (funcType 
                    (bType int)) main ( ) 
                (block { 
                    (blockItem 
                        (decl 
                            (varDecl 
                                (bType int) 
                                (varDef a1 = 
                                    (initVal 
                                        (exp 
                                            (addExp 
                                                (mulExp 
                                                    (unaryExp 
                                                        (primaryExp 
                                                            (number 
                                                                (intConst 1))))))))) , 
                                (varDef a2 = 
                                    (initVal 
                                        (exp 
                                            (addExp 
                                                (mulExp 
                                                    (unaryExp 
                                                        (primaryExp 
                                                            (number 
                                                                (intConst 2))))))))) , 
                                (varDef a3 = 
                                    (initVal 
                                        (exp 
                                            (addExp 
                                                (mulExp 
                                                    (unaryExp 
                                                        (primaryExp 
                                                            (number 
                                                                (intConst 3))))))))) ;))) 
                    (blockItem 
                        (decl 
                            (varDecl 
                                (bType int) 
                                (varDef a4 = 
                                    (initVal 
                                        (exp 
                                            (addExp 
                                                (mulExp 
                                                    (unaryExp 
                                                        (primaryExp 
                                                            (number 
                                                                (intConst 4))))))))) , 
                                (varDef a5 = 
                                    (initVal 
                                        (exp 
                                            (addExp 
                                                (mulExp 
                                                    (unaryExp 
                                                        (primaryExp 
                                                            (number 
                                                                (intConst 5))))))))) , 
                                (varDef a6 = 
                                    (initVal 
                                        (exp 
                                            (addExp 
                                                (mulExp 
                                                    (unaryExp 
                                                        (primaryExp 
                                                            (number 
                                                                (intConst 6))))))))) ;))) 
                    (blockItem 
                        (decl 
                            (varDecl 
                                (bType int) 
                                (varDef a7 = 
                                    (initVal 
                                        (exp 
                                            (addExp 
                                                (mulExp 
                                                    (unaryExp 
                                                        (primaryExp 
                                                            (number 
                                                                (intConst 7))))))))) , 
                                (varDef a8 = 
                                    (initVal 
                                        (exp 
                                            (addExp 
                                                (mulExp 
                                                    (unaryExp 
                                                        (primaryExp 
                                                            (number 
                                                                (intConst 8))))))))) , 
                                (varDef a9 = 
                                    (initVal 
                                        (exp 
                                            (addExp 
                                                (mulExp 
                                                    (unaryExp 
                                                        (primaryExp 
                                                            (number 
                                                                (intConst 9))))))))) ;))) 
                    (blockItem 
                        (decl 
                            (varDecl 
                                (bType int) 
                                (varDef a10 = 
                                    (initVal 
                                        (exp 
                                            (addExp 
                                                (mulExp 
                                                    (unaryExp 
                                                        (primaryExp 
                                                            (number 
                                                                (intConst 10))))))))) , 
                                (varDef a11 = 
                                    (initVal 
                                        (exp 
                                            (addExp 
                                                (mulExp 
                                                    (unaryExp 
                                                        (primaryExp 
                                                            (number 
                                                                (intConst 11))))))))) , 
                                (varDef a12 = 
                                    (initVal 
                                        (exp 
                                            (addExp 
                                                (mulExp 
                                                    (unaryExp 
                                                        (primaryExp 
                                                            (number 
                                                                (intConst 12))))))))) ;))) 
                    (blockItem 
                        (decl 
                            (varDecl 
                                (bType int) 
                                (varDef a13 = 
                                    (initVal 
                                        (exp 
                                            (addExp 
                                                (mulExp 
                                                    (unaryExp 
                                                        (primaryExp 
                                                            (number 
                                                                (intConst 13))))))))) , 
                                (varDef a14 = 
                                    (initVal 
                                        (exp 
                                            (addExp 
                                                (mulExp 
                                                    (unaryExp 
                                                        (primaryExp 
                                                            (number 
                                                                (intConst 14))))))))) , 
                                (varDef a15 = 
                                    (initVal 
                                        (exp 
                                            (addExp 
                                                (mulExp 
                                                    (unaryExp 
                                                        (primaryExp 
                                                            (number 
                                                                (intConst 15))))))))) ;))) 
                    (blockItem 
                        (decl 
                            (varDecl 
                                (bType int) 
                                (varDef a16 = 
                                    (initVal 
                                        (exp 
                                            (addExp 
                                                (mulExp 
                                                    (unaryExp 
                                                        (primaryExp 
                                                            (number 
                                                                (intConst 16))))))))) , 
                                (varDef a17 = 
                                    (initVal 
                                        (exp 
                                            (addExp 
                                                (mulExp 
                                                    (unaryExp 
                                                        (primaryExp 
                                                            (number 
                                                                (intConst 17))))))))) , 
                                (varDef a18 = 
                                    (initVal 
                                        (exp 
                                            (addExp 
                                                (mulExp 
                                                    (unaryExp 
                                                        (primaryExp 
                                                            (number 
                                                                (intConst 18))))))))) ;))) 
                    (blockItem 
                        (decl 
                            (varDecl 
                                (bType int) 
                                (varDef a19 = 
                                    (initVal 
                                        (exp 
                                            (addExp 
                                                (mulExp 
                                                    (unaryExp 
                                                        (primaryExp 
                                                            (number 
                                                                (intConst 19))))))))) , 
                                (varDef a20 = 
                                    (initVal 
                                        (exp 
                                            (addExp 
                                                (mulExp 
                                                    (unaryExp 
                                                        (primaryExp 
                                                            (number 
                                                                (intConst 20))))))))) , 
                                (varDef a21 = 
                                    (initVal 
                                        (exp 
                                            (addExp 
                                                (mulExp 
                                                    (unaryExp 
                                                        (primaryExp 
                                                            (number 
                                                                (intConst 21))))))))) ;))) 
                    (blockItem 
                        (decl 
                            (varDecl 
                                (bType int) 
                                (varDef a22 = 
                                    (initVal 
                                        (exp 
                                            (addExp 
                                                (mulExp 
                                                    (unaryExp 
                                                        (primaryExp 
                                                            (number 
                                                                (intConst 22))))))))) , 
                                (varDef a23 = 
                                    (initVal 
                                        (exp 
                                            (addExp 
                                                (mulExp 
                                                    (unaryExp 
                                                        (primaryExp 
                                                            (number 
                                                                (intConst 23))))))))) , 
                                (varDef a24 = 
                                    (initVal 
                                        (exp 
                                            (addExp 
                                                (mulExp 
                                                    (unaryExp 
                                                        (primaryExp 
                                                            (number 
                                                                (intConst 24))))))))) ;))) 
                    (blockItem 
                        (decl 
                            (varDecl 
                                (bType int) 
                                (varDef a25 = 
                                    (initVal 
                                        (exp 
                                            (addExp 
                                                (mulExp 
                                                    (unaryExp 
                                                        (primaryExp 
                                                            (number 
                                                                (intConst 25))))))))) , 
                                (varDef a26 = 
                                    (initVal 
                                        (exp 
                                            (addExp 
                                                (mulExp 
                                                    (unaryExp 
                                                        (primaryExp 
                                                            (number 
                                                                (intConst 26))))))))) , 
                                (varDef a27 = 
                                    (initVal 
                                        (exp 
                                            (addExp 
                                                (mulExp 
                                                    (unaryExp 
                                                        (primaryExp 
                                                            (number 
                                                                (intConst 27))))))))) ;))) 
                    (blockItem 
                        (stmt return 
                            (exp 
                                (addExp 
                                    (addExp 
                                        (addExp 
                                            (addExp 
                                                (addExp 
                                                    (addExp 
                                                        (addExp 
                                                            (addExp 
                                                                (addExp 
                                                                    (addExp 
                                                                        (addExp 
                                                                            (addExp 
                                                                                (addExp 
                                                                                    (addExp 
                                                                                        (addExp 
                                                                                            (addExp 
                                                                                                (addExp 
                                                                                                    (addExp 
                                                                                                        (addExp 
                                                                                                            (addExp 
                                                                                                                (addExp 
                                                                                                                    (addExp 
                                                                                                                        (addExp 
                                                                                                                            (addExp 
                                                                                                                                (addExp 
                                                                                                                                    (addExp 
                                                                                                                                        (addExp 
                                                                                                                                            (mulExp 
                                                                                                                                                (unaryExp 
                                                                                                                                                    (primaryExp 
                                                                                                                                                        (lVal a1))))) + 
                                                                                                                                        (mulExp 
                                                                                                                                            (unaryExp 
                                                                                                                                                (primaryExp 
                                                                                                                                                    (lVal a2))))) + 
                                                                                                                                    (mulExp 
                                                                                                                                        (unaryExp 
                                                                                                                                            (primaryExp 
                                                                                                                                                (lVal a3))))) + 
                                                                                                                                (mulExp 
                                                                                                                                    (unaryExp 
                                                                                                                                        (primaryExp 
                                                                                                                                            (lVal a4))))) + 
                                                                                                                            (mulExp 
                                                                                                                                (unaryExp 
                                                                                                                                    (primaryExp 
                                                                                                                                        (lVal a5))))) + 
                                                                                                                        (mulExp 
                                                                                                                            (unaryExp 
                                                                                                                                (primaryExp 
                                                                                                                                    (lVal a6))))) + 
                                                                                                                    (mulExp 
                                                                                                                        (unaryExp 
                                                                                                                            (primaryExp 
                                                                                                                                (lVal a7))))) + 
                                                                                                                (mulExp 
                                                                                                                    (unaryExp 
                                                                                                                        (primaryExp 
                                                                                                                            (lVal a8))))) + 
                                                                                                            (mulExp 
                                                                                                                (unaryExp 
                                                                                                                    (primaryExp 
                                                                                                                        (lVal a9))))) + 
                                                                                                        (mulExp 
                                                                                                            (unaryExp 
                                                                                                                (primaryExp 
                                                                                                                    (lVal a10))))) + 
                                                                                                    (mulExp 
                                                                                                        (unaryExp 
                                                                                                            (primaryExp 
                                                                                                                (lVal a11))))) + 
                                                                                                (mulExp 
                                                                                                    (unaryExp 
                                                                                                        (primaryExp 
                                                                                                            (lVal a12))))) + 
                                                                                            (mulExp 
                                                                                                (unaryExp 
                                                                                                    (primaryExp 
                                                                                                        (lVal a13))))) + 
                                                                                        (mulExp 
                                                                                            (unaryExp 
                                                                                                (primaryExp 
                                                                                                    (lVal a14))))) + 
                                                                                    (mulExp 
                                                                                        (unaryExp 
                                                                                            (primaryExp 
                                                                                                (lVal a15))))) + 
                                                                                (mulExp 
                                                                                    (unaryExp 
                                                                                        (primaryExp 
                                                                                            (lVal a16))))) + 
                                                                            (mulExp 
                                                                                (unaryExp 
                                                                                    (primaryExp 
                                                                                        (lVal a17))))) + 
                                                                        (mulExp 
                                                                            (unaryExp 
                                                                                (primaryExp 
                                                                                    (lVal a18))))) + 
                                                                    (mulExp 
                                                                        (unaryExp 
                                                                            (primaryExp 
                                                                                (lVal a19))))) + 
                                                                (mulExp 
                                                                    (unaryExp 
                                                                        (primaryExp 
                                                                            (lVal a20))))) + 
                                                            (mulExp 
                                                                (unaryExp 
                                                                    (primaryExp 
                                                                        (lVal a21))))) + 
                                                        (mulExp 
                                                            (unaryExp 
                                                                (primaryExp 
                                                                    (lVal a22))))) + 
                                                    (mulExp 
                                                        (unaryExp 
                                                            (primaryExp 
                                                                (lVal a23))))) + 
                                                (mulExp 
                                                    (unaryExp 
                                                        (primaryExp 
                                                            (lVal a24))))) + 
                                            (mulExp 
                                                (unaryExp 
                                                    (primaryExp 
                                                        (lVal a25))))) + 
                                        (mulExp 
                                            (unaryExp 
                                                (primaryExp 
                                                    (lVal a26))))) + 
                                    (mulExp 
                                        (unaryExp 
                                            (primaryExp 
                                                (lVal a27)))))) ;)) }))) <EOF>)
visitCompUnit
visitCompUnit: funcDef
construct funct block: main
visitVarDecl: int start
visitVarDecl: ident: a1
visitVarDecl: initVal
visitInit
visitPrimaryExp_ number
visitVarDecl: ident: a2
visitVarDecl: initVal
visitInit
visitPrimaryExp_ number
visitVarDecl: ident: a3
visitVarDecl: initVal
visitInit
visitPrimaryExp_ number
visitVarDecl: int start
visitVarDecl: ident: a4
visitVarDecl: initVal
visitInit
visitPrimaryExp_ number
visitVarDecl: ident: a5
visitVarDecl: initVal
visitInit
visitPrimaryExp_ number
visitVarDecl: ident: a6
visitVarDecl: initVal
visitInit
visitPrimaryExp_ number
visitVarDecl: int start
visitVarDecl: ident: a7
visitVarDecl: initVal
visitInit
visitPrimaryExp_ number
visitVarDecl: ident: a8
visitVarDecl: initVal
visitInit
visitPrimaryExp_ number
visitVarDecl: ident: a9
visitVarDecl: initVal
visitInit
visitPrimaryExp_ number
visitVarDecl: int start
visitVarDecl: ident: a10
visitVarDecl: initVal
visitInit
visitPrimaryExp_ number
visitVarDecl: ident: a11
visitVarDecl: initVal
visitInit
visitPrimaryExp_ number
visitVarDecl: ident: a12
visitVarDecl: initVal
visitInit
visitPrimaryExp_ number
visitVarDecl: int start
visitVarDecl: ident: a13
visitVarDecl: initVal
visitInit
visitPrimaryExp_ number
visitVarDecl: ident: a14
visitVarDecl: initVal
visitInit
visitPrimaryExp_ number
visitVarDecl: ident: a15
visitVarDecl: initVal
visitInit
visitPrimaryExp_ number
visitVarDecl: int start
visitVarDecl: ident: a16
visitVarDecl: initVal
visitInit
visitPrimaryExp_ number
visitVarDecl: ident: a17
visitVarDecl: initVal
visitInit
visitPrimaryExp_ number
visitVarDecl: ident: a18
visitVarDecl: initVal
visitInit
visitPrimaryExp_ number
visitVarDecl: int start
visitVarDecl: ident: a19
visitVarDecl: initVal
visitInit
visitPrimaryExp_ number
visitVarDecl: ident: a20
visitVarDecl: initVal
visitInit
visitPrimaryExp_ number
visitVarDecl: ident: a21
visitVarDecl: initVal
visitInit
visitPrimaryExp_ number
visitVarDecl: int start
visitVarDecl: ident: a22
visitVarDecl: initVal
visitInit
visitPrimaryExp_ number
visitVarDecl: ident: a23
visitVarDecl: initVal
visitInit
visitPrimaryExp_ number
visitVarDecl: ident: a24
visitVarDecl: initVal
visitInit
visitPrimaryExp_ number
visitVarDecl: int start
visitVarDecl: ident: a25
visitVarDecl: initVal
visitInit
visitPrimaryExp_ number
visitVarDecl: ident: a26
visitVarDecl: initVal
visitInit
visitPrimaryExp_ number
visitVarDecl: ident: a27
visitVarDecl: initVal
visitInit
visitPrimaryExp_ number
visitBlock done!
construct funct block done!
visitCompUnit end create new program
visitCompUnit end create new program end
------------------------------type check------------------------------
Info: visitProgramProgram
Info: visitFuncDefi32 @main()
Info: visitBlock
Info: visitVarDef i32 @a1 = 1
Info: visitExpr1
Info: visitAssignmentExpr1
Info: visitExpr1
Info: visitIntLiteralExpr1
ret->type 0x5628c25e8c10
Info: visitVarDef i32 @a2 = 2
Info: visitExpr2
Info: visitAssignmentExpr2
Info: visitExpr2
Info: visitIntLiteralExpr2
ret->type 0x5628c25e8c40
Info: visitVarDef i32 @a3 = 3
Info: visitExpr3
Info: visitAssignmentExpr3
Info: visitExpr3
Info: visitIntLiteralExpr3
ret->type 0x5628c25e8c70
Info: visitVarDef i32 @a4 = 4
Info: visitExpr4
Info: visitAssignmentExpr4
Info: visitExpr4
Info: visitIntLiteralExpr4
ret->type 0x5628c25e8ca0
Info: visitVarDef i32 @a5 = 5
Info: visitExpr5
Info: visitAssignmentExpr5
Info: visitExpr5
Info: visitIntLiteralExpr5
ret->type 0x5628c25e8cd0
Info: visitVarDef i32 @a6 = 6
Info: visitExpr6
Info: visitAssignmentExpr6
Info: visitExpr6
Info: visitIntLiteralExpr6
ret->type 0x5628c25e8d50
Info: visitVarDef i32 @a7 = 7
Info: visitExpr7
Info: visitAssignmentExpr7
Info: visitExpr7
Info: visitIntLiteralExpr7
ret->type 0x5628c25e8dd0
Info: visitVarDef i32 @a8 = 8
Info: visitExpr8
Info: visitAssignmentExpr8
Info: visitExpr8
Info: visitIntLiteralExpr8
ret->type 0x5628c25e8eb0
Info: visitVarDef i32 @a9 = 9
Info: visitExpr9
Info: visitAssignmentExpr9
Info: visitExpr9
Info: visitIntLiteralExpr9
ret->type 0x5628c25e8f90
Info: visitVarDef i32 @a10 = 10
Info: visitExpr10
Info: visitAssignmentExpr10
Info: visitExpr10
Info: visitIntLiteralExpr10
ret->type 0x5628c25e9070
Info: visitVarDef i32 @a11 = 11
Info: visitExpr11
Info: visitAssignmentExpr11
Info: visitExpr11
Info: visitIntLiteralExpr11
ret->type 0x5628c25e9150
Info: visitVarDef i32 @a12 = 12
Info: visitExpr12
Info: visitAssignmentExpr12
Info: visitExpr12
Info: visitIntLiteralExpr12
ret->type 0x5628c25e9230
Info: visitVarDef i32 @a13 = 13
Info: visitExpr13
Info: visitAssignmentExpr13
Info: visitExpr13
Info: visitIntLiteralExpr13
ret->type 0x5628c25e9310
Info: visitVarDef i32 @a14 = 14
Info: visitExpr14
Info: visitAssignmentExpr14
Info: visitExpr14
Info: visitIntLiteralExpr14
ret->type 0x5628c25e93f0
Info: visitVarDef i32 @a15 = 15
Info: visitExpr15
Info: visitAssignmentExpr15
Info: visitExpr15
Info: visitIntLiteralExpr15
ret->type 0x5628c25e94d0
Info: visitVarDef i32 @a16 = 16
Info: visitExpr16
Info: visitAssignmentExpr16
Info: visitExpr16
Info: visitIntLiteralExpr16
ret->type 0x5628c25e95b0
Info: visitVarDef i32 @a17 = 17
Info: visitExpr17
Info: visitAssignmentExpr17
Info: visitExpr17
Info: visitIntLiteralExpr17
ret->type 0x5628c25e9690
Info: visitVarDef i32 @a18 = 18
Info: visitExpr18
Info: visitAssignmentExpr18
Info: visitExpr18
Info: visitIntLiteralExpr18
ret->type 0x5628c25e9770
Info: visitVarDef i32 @a19 = 19
Info: visitExpr19
Info: visitAssignmentExpr19
Info: visitExpr19
Info: visitIntLiteralExpr19
ret->type 0x5628c25e9850
Info: visitVarDef i32 @a20 = 20
Info: visitExpr20
Info: visitAssignmentExpr20
Info: visitExpr20
Info: visitIntLiteralExpr20
ret->type 0x5628c25e9930
Info: visitVarDef i32 @a21 = 21
Info: visitExpr21
Info: visitAssignmentExpr21
Info: visitExpr21
Info: visitIntLiteralExpr21
ret->type 0x5628c25e9a10
Info: visitVarDef i32 @a22 = 22
Info: visitExpr22
Info: visitAssignmentExpr22
Info: visitExpr22
Info: visitIntLiteralExpr22
ret->type 0x5628c25e9af0
Info: visitVarDef i32 @a23 = 23
Info: visitExpr23
Info: visitAssignmentExpr23
Info: visitExpr23
Info: visitIntLiteralExpr23
ret->type 0x5628c25e9bd0
Info: visitVarDef i32 @a24 = 24
Info: visitExpr24
Info: visitAssignmentExpr24
Info: visitExpr24
Info: visitIntLiteralExpr24
ret->type 0x5628c25e9cb0
Info: visitVarDef i32 @a25 = 25
Info: visitExpr25
Info: visitAssignmentExpr25
Info: visitExpr25
Info: visitIntLiteralExpr25
ret->type 0x5628c25e9d90
Info: visitVarDef i32 @a26 = 26
Info: visitExpr26
Info: visitAssignmentExpr26
Info: visitExpr26
Info: visitIntLiteralExpr26
ret->type 0x5628c25e9e70
Info: visitVarDef i32 @a27 = 27
Info: visitExpr27
Info: visitAssignmentExpr27
Info: visitExpr27
Info: visitIntLiteralExpr27
ret->type 0x5628c25e9f50
Info: visitStatementReturn @a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12+@a13+@a14+@a15+@a16+@a17+@a18+@a19+@a20+@a21+@a22+@a23+@a24+@a25+@a26+@a27
Info: visitExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12+@a13+@a14+@a15+@a16+@a17+@a18+@a19+@a20+@a21+@a22+@a23+@a24+@a25+@a26+@a27
Info: visitBinopExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12+@a13+@a14+@a15+@a16+@a17+@a18+@a19+@a20+@a21+@a22+@a23+@a24+@a25+@a26+@a27
Info: visitExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12+@a13+@a14+@a15+@a16+@a17+@a18+@a19+@a20+@a21+@a22+@a23+@a24+@a25+@a26
Info: visitBinopExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12+@a13+@a14+@a15+@a16+@a17+@a18+@a19+@a20+@a21+@a22+@a23+@a24+@a25+@a26
Info: visitExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12+@a13+@a14+@a15+@a16+@a17+@a18+@a19+@a20+@a21+@a22+@a23+@a24+@a25
Info: visitBinopExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12+@a13+@a14+@a15+@a16+@a17+@a18+@a19+@a20+@a21+@a22+@a23+@a24+@a25
Info: visitExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12+@a13+@a14+@a15+@a16+@a17+@a18+@a19+@a20+@a21+@a22+@a23+@a24
Info: visitBinopExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12+@a13+@a14+@a15+@a16+@a17+@a18+@a19+@a20+@a21+@a22+@a23+@a24
Info: visitExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12+@a13+@a14+@a15+@a16+@a17+@a18+@a19+@a20+@a21+@a22+@a23
Info: visitBinopExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12+@a13+@a14+@a15+@a16+@a17+@a18+@a19+@a20+@a21+@a22+@a23
Info: visitExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12+@a13+@a14+@a15+@a16+@a17+@a18+@a19+@a20+@a21+@a22
Info: visitBinopExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12+@a13+@a14+@a15+@a16+@a17+@a18+@a19+@a20+@a21+@a22
Info: visitExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12+@a13+@a14+@a15+@a16+@a17+@a18+@a19+@a20+@a21
Info: visitBinopExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12+@a13+@a14+@a15+@a16+@a17+@a18+@a19+@a20+@a21
Info: visitExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12+@a13+@a14+@a15+@a16+@a17+@a18+@a19+@a20
Info: visitBinopExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12+@a13+@a14+@a15+@a16+@a17+@a18+@a19+@a20
Info: visitExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12+@a13+@a14+@a15+@a16+@a17+@a18+@a19
Info: visitBinopExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12+@a13+@a14+@a15+@a16+@a17+@a18+@a19
Info: visitExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12+@a13+@a14+@a15+@a16+@a17+@a18
Info: visitBinopExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12+@a13+@a14+@a15+@a16+@a17+@a18
Info: visitExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12+@a13+@a14+@a15+@a16+@a17
Info: visitBinopExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12+@a13+@a14+@a15+@a16+@a17
Info: visitExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12+@a13+@a14+@a15+@a16
Info: visitBinopExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12+@a13+@a14+@a15+@a16
Info: visitExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12+@a13+@a14+@a15
Info: visitBinopExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12+@a13+@a14+@a15
Info: visitExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12+@a13+@a14
Info: visitBinopExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12+@a13+@a14
Info: visitExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12+@a13
Info: visitBinopExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12+@a13
Info: visitExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12
Info: visitBinopExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11+@a12
Info: visitExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11
Info: visitBinopExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10+@a11
Info: visitExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10
Info: visitBinopExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9+@a10
Info: visitExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9
Info: visitBinopExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8+@a9
Info: visitExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8
Info: visitBinopExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7+@a8
Info: visitExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7
Info: visitBinopExpr@a1+@a2+@a3+@a4+@a5+@a6+@a7
Info: visitExpr@a1+@a2+@a3+@a4+@a5+@a6
Info: visitBinopExpr@a1+@a2+@a3+@a4+@a5+@a6
Info: visitExpr@a1+@a2+@a3+@a4+@a5
Info: visitBinopExpr@a1+@a2+@a3+@a4+@a5
Info: visitExpr@a1+@a2+@a3+@a4
Info: visitBinopExpr@a1+@a2+@a3+@a4
Info: visitExpr@a1+@a2+@a3
Info: visitBinopExpr@a1+@a2+@a3
Info: visitExpr@a1+@a2
Info: visitBinopExpr@a1+@a2
Info: visitExpr@a1
Info: visitLvalExpr@a1
Info: visitExpr@a2
Info: visitLvalExpr@a2
Info: visitExpr@a3
Info: visitLvalExpr@a3
Info: visitExpr@a4
Info: visitLvalExpr@a4
Info: visitExpr@a5
Info: visitLvalExpr@a5
Info: visitExpr@a6
Info: visitLvalExpr@a6
Info: visitExpr@a7
Info: visitLvalExpr@a7
Info: visitExpr@a8
Info: visitLvalExpr@a8
Info: visitExpr@a9
Info: visitLvalExpr@a9
Info: visitExpr@a10
Info: visitLvalExpr@a10
Info: visitExpr@a11
Info: visitLvalExpr@a11
Info: visitExpr@a12
Info: visitLvalExpr@a12
Info: visitExpr@a13
Info: visitLvalExpr@a13
Info: visitExpr@a14
Info: visitLvalExpr@a14
Info: visitExpr@a15
Info: visitLvalExpr@a15
Info: visitExpr@a16
Info: visitLvalExpr@a16
Info: visitExpr@a17
Info: visitLvalExpr@a17
Info: visitExpr@a18
Info: visitLvalExpr@a18
Info: visitExpr@a19
Info: visitLvalExpr@a19
Info: visitExpr@a20
Info: visitLvalExpr@a20
Info: visitExpr@a21
Info: visitLvalExpr@a21
Info: visitExpr@a22
Info: visitLvalExpr@a22
Info: visitExpr@a23
Info: visitLvalExpr@a23
Info: visitExpr@a24
Info: visitLvalExpr@a24
Info: visitExpr@a25
Info: visitLvalExpr@a25
Info: visitExpr@a26
Info: visitLvalExpr@a26
Info: visitExpr@a27
Info: visitLvalExpr@a27
Info: visitReturnStmtReturn @a1#2+@a2#2+@a3#2+@a4#2+@a5#2+@a6#2+@a7#2+@a8#2+@a9#2+@a10#2+@a11#2+@a12#2+@a13#2+@a14#2+@a15#2+@a16#2+@a17#2+@a18#2+@a19#2+@a20#2+@a21#2+@a22#2+@a23#2+@a24#2+@a25#2+@a26#2+@a27#2function has returnscope id1
ast: 
Program
  i32 @main()
    {
      i32 @a1#2 = 1
      i32 @a2#2 = 2
      i32 @a3#2 = 3
      i32 @a4#2 = 4
      i32 @a5#2 = 5
      i32 @a6#2 = 6
      i32 @a7#2 = 7
      i32 @a8#2 = 8
      i32 @a9#2 = 9
      i32 @a10#2 = 10
      i32 @a11#2 = 11
      i32 @a12#2 = 12
      i32 @a13#2 = 13
      i32 @a14#2 = 14
      i32 @a15#2 = 15
      i32 @a16#2 = 16
      i32 @a17#2 = 17
      i32 @a18#2 = 18
      i32 @a19#2 = 19
      i32 @a20#2 = 20
      i32 @a21#2 = 21
      i32 @a22#2 = 22
      i32 @a23#2 = 23
      i32 @a24#2 = 24
      i32 @a25#2 = 25
      i32 @a26#2 = 26
      i32 @a27#2 = 27
      Return @a1#2+@a2#2+@a3#2+@a4#2+@a5#2+@a6#2+@a7#2+@a8#2+@a9#2+@a10#2+@a11#2+@a12#2+@a13#2+@a14#2+@a15#2+@a16#2+@a17#2+@a18#2+@a19#2+@a20#2+@a21#2+@a22#2+@a23#2+@a24#2+@a25#2+@a26#2+@a27#2
    }
End of Program
--------------------------- building ir_origin ---------------------------
visitProgram
visitFunction main
visitBlock 
visitExpression
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitStatement
visitExpression
visitExpression
visitExpression
visitExpression
visitExpression
visitExpression
visitExpression
visitExpression
visitExpression
visitExpression
visitExpression
visitExpression
visitExpression
visitExpression
visitExpression
visitExpression
visitExpression
visitExpression
visitExpression
visitExpression
visitExpression
visitExpression
visitExpression
visitExpression
visitExpression
visitExpression
visitExpression
visitExpressionLValue a1#2
visitExpression
visitExpressionLValue a2#2
visitExpression
visitExpressionLValue a3#2
visitExpression
visitExpressionLValue a4#2
visitExpression
visitExpressionLValue a5#2
visitExpression
visitExpressionLValue a6#2
visitExpression
visitExpressionLValue a7#2
visitExpression
visitExpressionLValue a8#2
visitExpression
visitExpressionLValue a9#2
visitExpression
visitExpressionLValue a10#2
visitExpression
visitExpressionLValue a11#2
visitExpression
visitExpressionLValue a12#2
visitExpression
visitExpressionLValue a13#2
visitExpression
visitExpressionLValue a14#2
visitExpression
visitExpressionLValue a15#2
visitExpression
visitExpressionLValue a16#2
visitExpression
visitExpressionLValue a17#2
visitExpression
visitExpressionLValue a18#2
visitExpression
visitExpressionLValue a19#2
visitExpression
visitExpressionLValue a20#2
visitExpression
visitExpressionLValue a21#2
visitExpression
visitExpressionLValue a22#2
visitExpression
visitExpressionLValue a23#2
visitExpression
visitExpressionLValue a24#2
visitExpression
visitExpressionLValue a25#2
visitExpression
visitExpressionLValue a26#2
visitExpression
visitExpressionLValue a27#2
function main has 107 regs
B0:
  prev: 
  succ: 
B1:
  prev: 
  succ: 

B0:
  prev: 
  succ: 

entryB0
reverse_postorderB0
B0:
  doms: 
  domed_by: B0 

B0:
  DF: 

ir_origin:
; module
define i32 @main(){
B0:
  %r1 = alloca i32, i32 4
  %r2 = add i32 0, 1 ; loadint
  store i32 %r2, ptr %r1
  %r3 = alloca i32, i32 4
  %r4 = add i32 0, 2 ; loadint
  store i32 %r4, ptr %r3
  %r5 = alloca i32, i32 4
  %r6 = add i32 0, 3 ; loadint
  store i32 %r6, ptr %r5
  %r7 = alloca i32, i32 4
  %r8 = add i32 0, 4 ; loadint
  store i32 %r8, ptr %r7
  %r9 = alloca i32, i32 4
  %r10 = add i32 0, 5 ; loadint
  store i32 %r10, ptr %r9
  %r11 = alloca i32, i32 4
  %r12 = add i32 0, 6 ; loadint
  store i32 %r12, ptr %r11
  %r13 = alloca i32, i32 4
  %r14 = add i32 0, 7 ; loadint
  store i32 %r14, ptr %r13
  %r15 = alloca i32, i32 4
  %r16 = add i32 0, 8 ; loadint
  store i32 %r16, ptr %r15
  %r17 = alloca i32, i32 4
  %r18 = add i32 0, 9 ; loadint
  store i32 %r18, ptr %r17
  %r19 = alloca i32, i32 4
  %r20 = add i32 0, 10 ; loadint
  store i32 %r20, ptr %r19
  %r21 = alloca i32, i32 4
  %r22 = add i32 0, 11 ; loadint
  store i32 %r22, ptr %r21
  %r23 = alloca i32, i32 4
  %r24 = add i32 0, 12 ; loadint
  store i32 %r24, ptr %r23
  %r25 = alloca i32, i32 4
  %r26 = add i32 0, 13 ; loadint
  store i32 %r26, ptr %r25
  %r27 = alloca i32, i32 4
  %r28 = add i32 0, 14 ; loadint
  store i32 %r28, ptr %r27
  %r29 = alloca i32, i32 4
  %r30 = add i32 0, 15 ; loadint
  store i32 %r30, ptr %r29
  %r31 = alloca i32, i32 4
  %r32 = add i32 0, 16 ; loadint
  store i32 %r32, ptr %r31
  %r33 = alloca i32, i32 4
  %r34 = add i32 0, 17 ; loadint
  store i32 %r34, ptr %r33
  %r35 = alloca i32, i32 4
  %r36 = add i32 0, 18 ; loadint
  store i32 %r36, ptr %r35
  %r37 = alloca i32, i32 4
  %r38 = add i32 0, 19 ; loadint
  store i32 %r38, ptr %r37
  %r39 = alloca i32, i32 4
  %r40 = add i32 0, 20 ; loadint
  store i32 %r40, ptr %r39
  %r41 = alloca i32, i32 4
  %r42 = add i32 0, 21 ; loadint
  store i32 %r42, ptr %r41
  %r43 = alloca i32, i32 4
  %r44 = add i32 0, 22 ; loadint
  store i32 %r44, ptr %r43
  %r45 = alloca i32, i32 4
  %r46 = add i32 0, 23 ; loadint
  store i32 %r46, ptr %r45
  %r47 = alloca i32, i32 4
  %r48 = add i32 0, 24 ; loadint
  store i32 %r48, ptr %r47
  %r49 = alloca i32, i32 4
  %r50 = add i32 0, 25 ; loadint
  store i32 %r50, ptr %r49
  %r51 = alloca i32, i32 4
  %r52 = add i32 0, 26 ; loadint
  store i32 %r52, ptr %r51
  %r53 = alloca i32, i32 4
  %r54 = add i32 0, 27 ; loadint
  store i32 %r54, ptr %r53
  %r55 = load i32, ptr %r1
  %r56 = load i32, ptr %r3
  %r57 = add i32 %r55, %r56
  %r58 = load i32, ptr %r5
  %r59 = add i32 %r57, %r58
  %r60 = load i32, ptr %r7
  %r61 = add i32 %r59, %r60
  %r62 = load i32, ptr %r9
  %r63 = add i32 %r61, %r62
  %r64 = load i32, ptr %r11
  %r65 = add i32 %r63, %r64
  %r66 = load i32, ptr %r13
  %r67 = add i32 %r65, %r66
  %r68 = load i32, ptr %r15
  %r69 = add i32 %r67, %r68
  %r70 = load i32, ptr %r17
  %r71 = add i32 %r69, %r70
  %r72 = load i32, ptr %r19
  %r73 = add i32 %r71, %r72
  %r74 = load i32, ptr %r21
  %r75 = add i32 %r73, %r74
  %r76 = load i32, ptr %r23
  %r77 = add i32 %r75, %r76
  %r78 = load i32, ptr %r25
  %r79 = add i32 %r77, %r78
  %r80 = load i32, ptr %r27
  %r81 = add i32 %r79, %r80
  %r82 = load i32, ptr %r29
  %r83 = add i32 %r81, %r82
  %r84 = load i32, ptr %r31
  %r85 = add i32 %r83, %r84
  %r86 = load i32, ptr %r33
  %r87 = add i32 %r85, %r86
  %r88 = load i32, ptr %r35
  %r89 = add i32 %r87, %r88
  %r90 = load i32, ptr %r37
  %r91 = add i32 %r89, %r90
  %r92 = load i32, ptr %r39
  %r93 = add i32 %r91, %r92
  %r94 = load i32, ptr %r41
  %r95 = add i32 %r93, %r94
  %r96 = load i32, ptr %r43
  %r97 = add i32 %r95, %r96
  %r98 = load i32, ptr %r45
  %r99 = add i32 %r97, %r98
  %r100 = load i32, ptr %r47
  %r101 = add i32 %r99, %r100
  %r102 = load i32, ptr %r49
  %r103 = add i32 %r101, %r102
  %r104 = load i32, ptr %r51
  %r105 = add i32 %r103, %r104
  %r106 = load i32, ptr %r53
  %r107 = add i32 %r105, %r106
  ret i32 %r107

}
---------------------------------ir after mem2reg-------------------------------------
; module
define i32 @main(){
B0:
  %r2 = add i32 0, 1 ; loadint
  %r4 = add i32 0, 2 ; loadint
  %r6 = add i32 0, 3 ; loadint
  %r8 = add i32 0, 4 ; loadint
  %r10 = add i32 0, 5 ; loadint
  %r12 = add i32 0, 6 ; loadint
  %r14 = add i32 0, 7 ; loadint
  %r16 = add i32 0, 8 ; loadint
  %r18 = add i32 0, 9 ; loadint
  %r20 = add i32 0, 10 ; loadint
  %r22 = add i32 0, 11 ; loadint
  %r24 = add i32 0, 12 ; loadint
  %r26 = add i32 0, 13 ; loadint
  %r28 = add i32 0, 14 ; loadint
  %r30 = add i32 0, 15 ; loadint
  %r32 = add i32 0, 16 ; loadint
  %r34 = add i32 0, 17 ; loadint
  %r36 = add i32 0, 18 ; loadint
  %r38 = add i32 0, 19 ; loadint
  %r40 = add i32 0, 20 ; loadint
  %r42 = add i32 0, 21 ; loadint
  %r44 = add i32 0, 22 ; loadint
  %r46 = add i32 0, 23 ; loadint
  %r48 = add i32 0, 24 ; loadint
  %r50 = add i32 0, 25 ; loadint
  %r52 = add i32 0, 26 ; loadint
  %r54 = add i32 0, 27 ; loadint
  %r57 = add i32 %r2, %r4
  %r59 = add i32 %r57, %r6
  %r61 = add i32 %r59, %r8
  %r63 = add i32 %r61, %r10
  %r65 = add i32 %r63, %r12
  %r67 = add i32 %r65, %r14
  %r69 = add i32 %r67, %r16
  %r71 = add i32 %r69, %r18
  %r73 = add i32 %r71, %r20
  %r75 = add i32 %r73, %r22
  %r77 = add i32 %r75, %r24
  %r79 = add i32 %r77, %r26
  %r81 = add i32 %r79, %r28
  %r83 = add i32 %r81, %r30
  %r85 = add i32 %r83, %r32
  %r87 = add i32 %r85, %r34
  %r89 = add i32 %r87, %r36
  %r91 = add i32 %r89, %r38
  %r93 = add i32 %r91, %r40
  %r95 = add i32 %r93, %r42
  %r97 = add i32 %r95, %r44
  %r99 = add i32 %r97, %r46
  %r101 = add i32 %r99, %r48
  %r103 = add i32 %r101, %r50
  %r105 = add i32 %r103, %r52
  %r107 = add i32 %r105, %r54
  ret i32 %r107

}
---------------------------------ir -------------------------------------
; module
define i32 @main(){
B0:
  %r2 = add i32 0, 1 ; loadint
  %r4 = add i32 0, 2 ; loadint
  %r6 = add i32 0, 3 ; loadint
  %r8 = add i32 0, 4 ; loadint
  %r10 = add i32 0, 5 ; loadint
  %r12 = add i32 0, 6 ; loadint
  %r14 = add i32 0, 7 ; loadint
  %r16 = add i32 0, 8 ; loadint
  %r18 = add i32 0, 9 ; loadint
  %r20 = add i32 0, 10 ; loadint
  %r22 = add i32 0, 11 ; loadint
  %r24 = add i32 0, 12 ; loadint
  %r26 = add i32 0, 13 ; loadint
  %r28 = add i32 0, 14 ; loadint
  %r30 = add i32 0, 15 ; loadint
  %r32 = add i32 0, 16 ; loadint
  %r34 = add i32 0, 17 ; loadint
  %r36 = add i32 0, 18 ; loadint
  %r38 = add i32 0, 19 ; loadint
  %r40 = add i32 0, 20 ; loadint
  %r42 = add i32 0, 21 ; loadint
  %r44 = add i32 0, 22 ; loadint
  %r46 = add i32 0, 23 ; loadint
  %r48 = add i32 0, 24 ; loadint
  %r50 = add i32 0, 25 ; loadint
  %r52 = add i32 0, 26 ; loadint
  %r54 = add i32 0, 27 ; loadint
  %r57 = add i32 %r2, %r4
  %r59 = add i32 %r57, %r6
  %r61 = add i32 %r59, %r8
  %r63 = add i32 %r61, %r10
  %r65 = add i32 %r63, %r12
  %r67 = add i32 %r65, %r14
  %r69 = add i32 %r67, %r16
  %r71 = add i32 %r69, %r18
  %r73 = add i32 %r71, %r20
  %r75 = add i32 %r73, %r22
  %r77 = add i32 %r75, %r24
  %r79 = add i32 %r77, %r26
  %r81 = add i32 %r79, %r28
  %r83 = add i32 %r81, %r30
  %r85 = add i32 %r83, %r32
  %r87 = add i32 %r85, %r34
  %r89 = add i32 %r87, %r36
  %r91 = add i32 %r89, %r38
  %r93 = add i32 %r91, %r40
  %r95 = add i32 %r93, %r42
  %r97 = add i32 %r95, %r44
  %r99 = add i32 %r97, %r46
  %r101 = add i32 %r99, %r48
  %r103 = add i32 %r101, %r50
  %r105 = add i32 %r103, %r52
  %r107 = add i32 %r105, %r54
  ret i32 %r107

}
--------------------------- building riscv ---------------------------
riscv: 
    li T[-2], 1
    li T[-4], 2
    li T[-6], 3
    li T[-8], 4
    li T[-10], 5
    li T[-12], 6
    li T[-14], 7
    li T[-16], 8
    li T[-18], 9
    li T[-20], 10
    li T[-22], 11
    li T[-24], 12
    li T[-26], 13
    li T[-28], 14
    li T[-30], 15
    li T[-32], 16
    li T[-34], 17
    li T[-36], 18
    li T[-38], 19
    li T[-40], 20
    li T[-42], 21
    li T[-44], 22
    li T[-46], 23
    li T[-48], 24
    li T[-50], 25
    li T[-52], 26
    li T[-54], 27
    add T[-57], T[-2], T[-4]
    add T[-59], T[-57], T[-6]
    add T[-61], T[-59], T[-8]
    add T[-63], T[-61], T[-10]
    add T[-65], T[-63], T[-12]
    add T[-67], T[-65], T[-14]
    add T[-69], T[-67], T[-16]
    add T[-71], T[-69], T[-18]
    add T[-73], T[-71], T[-20]
    add T[-75], T[-73], T[-22]
    add T[-77], T[-75], T[-24]
    add T[-79], T[-77], T[-26]
    add T[-81], T[-79], T[-28]
    add T[-83], T[-81], T[-30]
    add T[-85], T[-83], T[-32]
    add T[-87], T[-85], T[-34]
    add T[-89], T[-87], T[-36]
    add T[-91], T[-89], T[-38]
    add T[-93], T[-91], T[-40]
    add T[-95], T[-93], T[-42]
    add T[-97], T[-95], T[-44]
    add T[-99], T[-97], T[-46]
    add T[-101], T[-99], T[-48]
    add T[-103], T[-101], T[-50]
    add T[-105], T[-103], T[-52]
    add T[-107], T[-105], T[-54]
    mv a0, T[-107]
    ret
?
main
main Main()
main do_liveness_analysis() done
main Build() done
freeze reg MkWorklist insert T[-107]
simplify reg MkWorklist insert T[-105]
simplify reg MkWorklist insert T[-103]
simplify reg MkWorklist insert T[-101]
simplify reg MkWorklist insert T[-99]
simplify reg MkWorklist insert T[-97]
simplify reg MkWorklist insert T[-95]
simplify reg MkWorklist insert T[-93]
simplify reg MkWorklist insert T[-91]
simplify reg MkWorklist insert T[-89]
simplify reg MkWorklist insert T[-87]
simplify reg MkWorklist insert T[-85]
simplify reg MkWorklist insert T[-83]
simplify reg MkWorklist insert T[-81]
simplify reg MkWorklist insert T[-79]
simplify reg MkWorklist insert T[-77]
simplify reg MkWorklist insert T[-75]
simplify reg MkWorklist insert T[-73]
simplify reg MkWorklist insert T[-71]
simplify reg MkWorklist insert T[-69]
simplify reg MkWorklist insert T[-67]
simplify reg MkWorklist insert T[-65]
simplify reg MkWorklist insert T[-63]
simplify reg MkWorklist insert T[-61]
simplify reg MkWorklist insert T[-59]
simplify reg MkWorklist insert T[-57]
spill reg MkWorklist insert T[-54]
spill reg MkWorklist insert T[-52]
spill reg MkWorklist insert T[-50]
spill reg MkWorklist insert T[-48]
spill reg MkWorklist insert T[-46]
spill reg MkWorklist insert T[-44]
spill reg MkWorklist insert T[-42]
spill reg MkWorklist insert T[-40]
spill reg MkWorklist insert T[-38]
spill reg MkWorklist insert T[-36]
spill reg MkWorklist insert T[-34]
spill reg MkWorklist insert T[-32]
spill reg MkWorklist insert T[-30]
spill reg MkWorklist insert T[-28]
spill reg MkWorklist insert T[-26]
spill reg MkWorklist insert T[-24]
spill reg MkWorklist insert T[-22]
spill reg MkWorklist insert T[-20]
spill reg MkWorklist insert T[-18]
spill reg MkWorklist insert T[-16]
spill reg MkWorklist insert T[-14]
spill reg MkWorklist insert T[-12]
spill reg MkWorklist insert T[-10]
spill reg MkWorklist insert T[-8]
spill reg MkWorklist insert T[-6]
spill reg MkWorklist insert T[-4]
spill reg MkWorklist insert T[-2]
main MkWorklist() done
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Coalesce()
main SelectSpill()
select spill entry

main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main AssignColors() done
main RewriteProgram() done
    li T[-108], 1
    sw T[-108], 48(sp)
    li T[-4], 2
    li T[-6], 3
    li T[-8], 4
    li T[-10], 5
    li T[-12], 6
    li T[-14], 7
    li T[-16], 8
    li T[-18], 9
    li T[-20], 10
    li T[-22], 11
    li T[-24], 12
    li T[-26], 13
    li T[-28], 14
    li T[-30], 15
    li T[-32], 16
    li T[-34], 17
    li T[-36], 18
    li T[-38], 19
    li T[-40], 20
    li T[-42], 21
    li T[-44], 22
    li T[-46], 23
    li T[-48], 24
    li T[-50], 25
    li T[-52], 26
    li T[-54], 27
    lw T[-109], 48(sp)
    add T[-57], T[-109], T[-4]
    add T[-59], T[-57], T[-6]
    add T[-61], T[-59], T[-8]
    add T[-63], T[-61], T[-10]
    add T[-65], T[-63], T[-12]
    add T[-67], T[-65], T[-14]
    add T[-69], T[-67], T[-16]
    add T[-71], T[-69], T[-18]
    add T[-73], T[-71], T[-20]
    add T[-75], T[-73], T[-22]
    add T[-77], T[-75], T[-24]
    add T[-79], T[-77], T[-26]
    add T[-81], T[-79], T[-28]
    add T[-83], T[-81], T[-30]
    add T[-85], T[-83], T[-32]
    add T[-87], T[-85], T[-34]
    add T[-89], T[-87], T[-36]
    add T[-91], T[-89], T[-38]
    add T[-93], T[-91], T[-40]
    add T[-95], T[-93], T[-42]
    add T[-97], T[-95], T[-44]
    add T[-99], T[-97], T[-46]
    add T[-101], T[-99], T[-48]
    add T[-103], T[-101], T[-50]
    add T[-105], T[-103], T[-52]
    add T[-107], T[-105], T[-54]
    mv a0, T[-107]
    ret
main Main()
main do_liveness_analysis() done
main Build() done
spill reg MkWorklist insert T[-109]
simplify reg MkWorklist insert T[-108]
freeze reg MkWorklist insert T[-107]
simplify reg MkWorklist insert T[-105]
simplify reg MkWorklist insert T[-103]
simplify reg MkWorklist insert T[-101]
simplify reg MkWorklist insert T[-99]
simplify reg MkWorklist insert T[-97]
simplify reg MkWorklist insert T[-95]
simplify reg MkWorklist insert T[-93]
simplify reg MkWorklist insert T[-91]
simplify reg MkWorklist insert T[-89]
simplify reg MkWorklist insert T[-87]
simplify reg MkWorklist insert T[-85]
simplify reg MkWorklist insert T[-83]
simplify reg MkWorklist insert T[-81]
simplify reg MkWorklist insert T[-79]
simplify reg MkWorklist insert T[-77]
simplify reg MkWorklist insert T[-75]
simplify reg MkWorklist insert T[-73]
simplify reg MkWorklist insert T[-71]
simplify reg MkWorklist insert T[-69]
simplify reg MkWorklist insert T[-67]
simplify reg MkWorklist insert T[-65]
simplify reg MkWorklist insert T[-63]
simplify reg MkWorklist insert T[-61]
simplify reg MkWorklist insert T[-59]
simplify reg MkWorklist insert T[-57]
spill reg MkWorklist insert T[-54]
spill reg MkWorklist insert T[-52]
spill reg MkWorklist insert T[-50]
spill reg MkWorklist insert T[-48]
spill reg MkWorklist insert T[-46]
spill reg MkWorklist insert T[-44]
spill reg MkWorklist insert T[-42]
spill reg MkWorklist insert T[-40]
spill reg MkWorklist insert T[-38]
spill reg MkWorklist insert T[-36]
spill reg MkWorklist insert T[-34]
spill reg MkWorklist insert T[-32]
spill reg MkWorklist insert T[-30]
spill reg MkWorklist insert T[-28]
spill reg MkWorklist insert T[-26]
spill reg MkWorklist insert T[-24]
spill reg MkWorklist insert T[-22]
spill reg MkWorklist insert T[-20]
spill reg MkWorklist insert T[-18]
spill reg MkWorklist insert T[-16]
spill reg MkWorklist insert T[-14]
spill reg MkWorklist insert T[-12]
spill reg MkWorklist insert T[-10]
spill reg MkWorklist insert T[-8]
spill reg MkWorklist insert T[-6]
spill reg MkWorklist insert T[-4]
main MkWorklist() done
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Coalesce()
main SelectSpill()
select spill entry

main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main AssignColors() done
main RewriteProgram() done
    li T[-108], 1
    sw T[-108], 48(sp)
    li T[-110], 2
    sw T[-110], 52(sp)
    li T[-6], 3
    li T[-8], 4
    li T[-10], 5
    li T[-12], 6
    li T[-14], 7
    li T[-16], 8
    li T[-18], 9
    li T[-20], 10
    li T[-22], 11
    li T[-24], 12
    li T[-26], 13
    li T[-28], 14
    li T[-30], 15
    li T[-32], 16
    li T[-34], 17
    li T[-36], 18
    li T[-38], 19
    li T[-40], 20
    li T[-42], 21
    li T[-44], 22
    li T[-46], 23
    li T[-48], 24
    li T[-50], 25
    li T[-52], 26
    li T[-54], 27
    lw T[-109], 48(sp)
    lw T[-111], 52(sp)
    add T[-57], T[-109], T[-111]
    add T[-59], T[-57], T[-6]
    add T[-61], T[-59], T[-8]
    add T[-63], T[-61], T[-10]
    add T[-65], T[-63], T[-12]
    add T[-67], T[-65], T[-14]
    add T[-69], T[-67], T[-16]
    add T[-71], T[-69], T[-18]
    add T[-73], T[-71], T[-20]
    add T[-75], T[-73], T[-22]
    add T[-77], T[-75], T[-24]
    add T[-79], T[-77], T[-26]
    add T[-81], T[-79], T[-28]
    add T[-83], T[-81], T[-30]
    add T[-85], T[-83], T[-32]
    add T[-87], T[-85], T[-34]
    add T[-89], T[-87], T[-36]
    add T[-91], T[-89], T[-38]
    add T[-93], T[-91], T[-40]
    add T[-95], T[-93], T[-42]
    add T[-97], T[-95], T[-44]
    add T[-99], T[-97], T[-46]
    add T[-101], T[-99], T[-48]
    add T[-103], T[-101], T[-50]
    add T[-105], T[-103], T[-52]
    add T[-107], T[-105], T[-54]
    mv a0, T[-107]
    ret
main Main()
main do_liveness_analysis() done
main Build() done
spill reg MkWorklist insert T[-111]
simplify reg MkWorklist insert T[-110]
spill reg MkWorklist insert T[-109]
simplify reg MkWorklist insert T[-108]
freeze reg MkWorklist insert T[-107]
simplify reg MkWorklist insert T[-105]
simplify reg MkWorklist insert T[-103]
simplify reg MkWorklist insert T[-101]
simplify reg MkWorklist insert T[-99]
simplify reg MkWorklist insert T[-97]
simplify reg MkWorklist insert T[-95]
simplify reg MkWorklist insert T[-93]
simplify reg MkWorklist insert T[-91]
simplify reg MkWorklist insert T[-89]
simplify reg MkWorklist insert T[-87]
simplify reg MkWorklist insert T[-85]
simplify reg MkWorklist insert T[-83]
simplify reg MkWorklist insert T[-81]
simplify reg MkWorklist insert T[-79]
simplify reg MkWorklist insert T[-77]
simplify reg MkWorklist insert T[-75]
simplify reg MkWorklist insert T[-73]
simplify reg MkWorklist insert T[-71]
simplify reg MkWorklist insert T[-69]
simplify reg MkWorklist insert T[-67]
simplify reg MkWorklist insert T[-65]
simplify reg MkWorklist insert T[-63]
simplify reg MkWorklist insert T[-61]
simplify reg MkWorklist insert T[-59]
simplify reg MkWorklist insert T[-57]
spill reg MkWorklist insert T[-54]
spill reg MkWorklist insert T[-52]
spill reg MkWorklist insert T[-50]
spill reg MkWorklist insert T[-48]
spill reg MkWorklist insert T[-46]
spill reg MkWorklist insert T[-44]
spill reg MkWorklist insert T[-42]
spill reg MkWorklist insert T[-40]
spill reg MkWorklist insert T[-38]
spill reg MkWorklist insert T[-36]
spill reg MkWorklist insert T[-34]
spill reg MkWorklist insert T[-32]
spill reg MkWorklist insert T[-30]
spill reg MkWorklist insert T[-28]
spill reg MkWorklist insert T[-26]
spill reg MkWorklist insert T[-24]
spill reg MkWorklist insert T[-22]
spill reg MkWorklist insert T[-20]
spill reg MkWorklist insert T[-18]
spill reg MkWorklist insert T[-16]
spill reg MkWorklist insert T[-14]
spill reg MkWorklist insert T[-12]
spill reg MkWorklist insert T[-10]
spill reg MkWorklist insert T[-8]
spill reg MkWorklist insert T[-6]
main MkWorklist() done
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Coalesce()
main SelectSpill()
select spill entry

main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main AssignColors() done
main RewriteProgram() done
    li T[-108], 1
    sw T[-108], 48(sp)
    li T[-110], 2
    sw T[-110], 52(sp)
    li T[-112], 3
    sw T[-112], 56(sp)
    li T[-8], 4
    li T[-10], 5
    li T[-12], 6
    li T[-14], 7
    li T[-16], 8
    li T[-18], 9
    li T[-20], 10
    li T[-22], 11
    li T[-24], 12
    li T[-26], 13
    li T[-28], 14
    li T[-30], 15
    li T[-32], 16
    li T[-34], 17
    li T[-36], 18
    li T[-38], 19
    li T[-40], 20
    li T[-42], 21
    li T[-44], 22
    li T[-46], 23
    li T[-48], 24
    li T[-50], 25
    li T[-52], 26
    li T[-54], 27
    lw T[-109], 48(sp)
    lw T[-111], 52(sp)
    add T[-57], T[-109], T[-111]
    lw T[-113], 56(sp)
    add T[-59], T[-57], T[-113]
    add T[-61], T[-59], T[-8]
    add T[-63], T[-61], T[-10]
    add T[-65], T[-63], T[-12]
    add T[-67], T[-65], T[-14]
    add T[-69], T[-67], T[-16]
    add T[-71], T[-69], T[-18]
    add T[-73], T[-71], T[-20]
    add T[-75], T[-73], T[-22]
    add T[-77], T[-75], T[-24]
    add T[-79], T[-77], T[-26]
    add T[-81], T[-79], T[-28]
    add T[-83], T[-81], T[-30]
    add T[-85], T[-83], T[-32]
    add T[-87], T[-85], T[-34]
    add T[-89], T[-87], T[-36]
    add T[-91], T[-89], T[-38]
    add T[-93], T[-91], T[-40]
    add T[-95], T[-93], T[-42]
    add T[-97], T[-95], T[-44]
    add T[-99], T[-97], T[-46]
    add T[-101], T[-99], T[-48]
    add T[-103], T[-101], T[-50]
    add T[-105], T[-103], T[-52]
    add T[-107], T[-105], T[-54]
    mv a0, T[-107]
    ret
main Main()
main do_liveness_analysis() done
main Build() done
simplify reg MkWorklist insert T[-113]
simplify reg MkWorklist insert T[-112]
spill reg MkWorklist insert T[-111]
simplify reg MkWorklist insert T[-110]
spill reg MkWorklist insert T[-109]
simplify reg MkWorklist insert T[-108]
freeze reg MkWorklist insert T[-107]
simplify reg MkWorklist insert T[-105]
simplify reg MkWorklist insert T[-103]
simplify reg MkWorklist insert T[-101]
simplify reg MkWorklist insert T[-99]
simplify reg MkWorklist insert T[-97]
simplify reg MkWorklist insert T[-95]
simplify reg MkWorklist insert T[-93]
simplify reg MkWorklist insert T[-91]
simplify reg MkWorklist insert T[-89]
simplify reg MkWorklist insert T[-87]
simplify reg MkWorklist insert T[-85]
simplify reg MkWorklist insert T[-83]
simplify reg MkWorklist insert T[-81]
simplify reg MkWorklist insert T[-79]
simplify reg MkWorklist insert T[-77]
simplify reg MkWorklist insert T[-75]
simplify reg MkWorklist insert T[-73]
simplify reg MkWorklist insert T[-71]
simplify reg MkWorklist insert T[-69]
simplify reg MkWorklist insert T[-67]
simplify reg MkWorklist insert T[-65]
simplify reg MkWorklist insert T[-63]
simplify reg MkWorklist insert T[-61]
simplify reg MkWorklist insert T[-59]
spill reg MkWorklist insert T[-57]
spill reg MkWorklist insert T[-54]
spill reg MkWorklist insert T[-52]
spill reg MkWorklist insert T[-50]
spill reg MkWorklist insert T[-48]
spill reg MkWorklist insert T[-46]
spill reg MkWorklist insert T[-44]
spill reg MkWorklist insert T[-42]
spill reg MkWorklist insert T[-40]
spill reg MkWorklist insert T[-38]
spill reg MkWorklist insert T[-36]
spill reg MkWorklist insert T[-34]
spill reg MkWorklist insert T[-32]
spill reg MkWorklist insert T[-30]
spill reg MkWorklist insert T[-28]
spill reg MkWorklist insert T[-26]
spill reg MkWorklist insert T[-24]
spill reg MkWorklist insert T[-22]
spill reg MkWorklist insert T[-20]
spill reg MkWorklist insert T[-18]
spill reg MkWorklist insert T[-16]
spill reg MkWorklist insert T[-14]
spill reg MkWorklist insert T[-12]
spill reg MkWorklist insert T[-10]
spill reg MkWorklist insert T[-8]
main MkWorklist() done
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Coalesce()
main SelectSpill()
select spill entry

main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main Simplify()
main AssignColors() done
replace regs

replace regs

replace regs

replace regs

main
after compute reg_used
after prologue
end of emitend
