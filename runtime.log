--------------------------- building ast ---------------------------
parse tree: 
(compUnit 
        (compUnitItem 
            (funcDef 
                (funcType 
                    (bType int)) func9params ( 
                (funcFParams 
                    (funcFParam 
                        (bType int) a) , 
                    (funcFParam 
                        (bType int) b) , 
                    (funcFParam 
                        (bType int) c) , 
                    (funcFParam 
                        (bType int) d) , 
                    (funcFParam 
                        (bType int) e) , 
                    (funcFParam 
                        (bType int) f) , 
                    (funcFParam 
                        (bType int) g) , 
                    (funcFParam 
                        (bType int) h) , 
                    (funcFParam 
                        (bType int) k)) ) 
                (block { 
                    (blockItem 
                        (stmt return 
                            (exp 
                                (addExp 
                                    (addExp 
                                        (addExp 
                                            (addExp 
                                                (addExp 
                                                    (addExp 
                                                        (addExp 
                                                            (addExp 
                                                                (addExp 
                                                                    (mulExp 
                                                                        (unaryExp 
                                                                            (primaryExp 
                                                                                (lVal a))))) + 
                                                                (mulExp 
                                                                    (unaryExp 
                                                                        (primaryExp 
                                                                            (lVal b))))) + 
                                                            (mulExp 
                                                                (unaryExp 
                                                                    (primaryExp 
                                                                        (lVal c))))) + 
                                                        (mulExp 
                                                            (unaryExp 
                                                                (primaryExp 
                                                                    (lVal d))))) + 
                                                    (mulExp 
                                                        (unaryExp 
                                                            (primaryExp 
                                                                (lVal e))))) + 
                                                (mulExp 
                                                    (unaryExp 
                                                        (primaryExp 
                                                            (lVal f))))) + 
                                            (mulExp 
                                                (unaryExp 
                                                    (primaryExp 
                                                        (lVal g))))) + 
                                        (mulExp 
                                            (unaryExp 
                                                (primaryExp 
                                                    (lVal h))))) + 
                                    (mulExp 
                                        (unaryExp 
                                            (primaryExp 
                                                (lVal k)))))) ;)) }))) 
        (compUnitItem 
            (funcDef 
                (funcType 
                    (bType int)) main ( ) 
                (block { 
                    (blockItem 
                        (decl 
                            (varDecl 
                                (bType int) 
                                (varDef d = 
                                    (initVal 
                                        (exp 
                                            (addExp 
                                                (addExp 
                                                    (mulExp 
                                                        (unaryExp func9params ( 
                                                            (funcRParams 
                                                                (funcRParam 
                                                                    (exp 
                                                                        (addExp 
                                                                            (mulExp 
                                                                                (unaryExp 
                                                                                    (primaryExp 
                                                                                        (number 
                                                                                            (intConst 1)))))))) , 
                                                                (funcRParam 
                                                                    (exp 
                                                                        (addExp 
                                                                            (mulExp 
                                                                                (unaryExp 
                                                                                    (primaryExp 
                                                                                        (number 
                                                                                            (intConst 2)))))))) , 
                                                                (funcRParam 
                                                                    (exp 
                                                                        (addExp 
                                                                            (mulExp 
                                                                                (unaryExp 
                                                                                    (primaryExp 
                                                                                        (number 
                                                                                            (intConst 3)))))))) , 
                                                                (funcRParam 
                                                                    (exp 
                                                                        (addExp 
                                                                            (mulExp 
                                                                                (unaryExp 
                                                                                    (primaryExp 
                                                                                        (number 
                                                                                            (intConst 4)))))))) , 
                                                                (funcRParam 
                                                                    (exp 
                                                                        (addExp 
                                                                            (mulExp 
                                                                                (unaryExp 
                                                                                    (primaryExp 
                                                                                        (number 
                                                                                            (intConst 5)))))))) , 
                                                                (funcRParam 
                                                                    (exp 
                                                                        (addExp 
                                                                            (mulExp 
                                                                                (unaryExp 
                                                                                    (primaryExp 
                                                                                        (number 
                                                                                            (intConst 6)))))))) , 
                                                                (funcRParam 
                                                                    (exp 
                                                                        (addExp 
                                                                            (mulExp 
                                                                                (unaryExp 
                                                                                    (primaryExp 
                                                                                        (number 
                                                                                            (intConst 7)))))))) , 
                                                                (funcRParam 
                                                                    (exp 
                                                                        (addExp 
                                                                            (mulExp 
                                                                                (unaryExp 
                                                                                    (primaryExp 
                                                                                        (number 
                                                                                            (intConst 8)))))))) , 
                                                                (funcRParam 
                                                                    (exp 
                                                                        (addExp 
                                                                            (mulExp 
                                                                                (unaryExp 
                                                                                    (primaryExp 
                                                                                        (number 
                                                                                            (intConst 9))))))))) )))) + 
                                                (mulExp 
                                                    (unaryExp func9params ( 
                                                        (funcRParams 
                                                            (funcRParam 
                                                                (exp 
                                                                    (addExp 
                                                                        (mulExp 
                                                                            (unaryExp 
                                                                                (primaryExp 
                                                                                    (number 
                                                                                        (intConst 1)))))))) , 
                                                            (funcRParam 
                                                                (exp 
                                                                    (addExp 
                                                                        (mulExp 
                                                                            (unaryExp 
                                                                                (primaryExp 
                                                                                    (number 
                                                                                        (intConst 2)))))))) , 
                                                            (funcRParam 
                                                                (exp 
                                                                    (addExp 
                                                                        (mulExp 
                                                                            (unaryExp 
                                                                                (primaryExp 
                                                                                    (number 
                                                                                        (intConst 3)))))))) , 
                                                            (funcRParam 
                                                                (exp 
                                                                    (addExp 
                                                                        (mulExp 
                                                                            (unaryExp 
                                                                                (primaryExp 
                                                                                    (number 
                                                                                        (intConst 4)))))))) , 
                                                            (funcRParam 
                                                                (exp 
                                                                    (addExp 
                                                                        (mulExp 
                                                                            (unaryExp 
                                                                                (primaryExp 
                                                                                    (number 
                                                                                        (intConst 5)))))))) , 
                                                            (funcRParam 
                                                                (exp 
                                                                    (addExp 
                                                                        (mulExp 
                                                                            (unaryExp 
                                                                                (primaryExp 
                                                                                    (number 
                                                                                        (intConst 6)))))))) , 
                                                            (funcRParam 
                                                                (exp 
                                                                    (addExp 
                                                                        (mulExp 
                                                                            (unaryExp 
                                                                                (primaryExp 
                                                                                    (number 
                                                                                        (intConst 7)))))))) , 
                                                            (funcRParam 
                                                                (exp 
                                                                    (addExp 
                                                                        (mulExp 
                                                                            (unaryExp 
                                                                                (primaryExp 
                                                                                    (number 
                                                                                        (intConst 8)))))))) , 
                                                            (funcRParam 
                                                                (exp 
                                                                    (addExp 
                                                                        (mulExp 
                                                                            (unaryExp 
                                                                                (primaryExp 
                                                                                    (number 
                                                                                        (intConst 100))))))))) ))))))) ;))) 
                    (blockItem 
                        (stmt return 
                            (exp 
                                (addExp 
                                    (mulExp 
                                        (unaryExp 
                                            (primaryExp 
                                                (lVal d)))))) ;)) }))) <EOF>)
visitCompUnit
visitCompUnit: funcDef
construct funct block: func9params
visitBlock done!
construct funct block done!
visitCompUnit: funcDef
construct funct block: main
visitVarDecl: int start
visitVarDecl: ident: d
visitVarDecl: initVal
visitInit
visitCall ident: func9params
visitFuncRParams
visitPrimaryExp_ number
visitPrimaryExp_ number
visitPrimaryExp_ number
visitPrimaryExp_ number
visitPrimaryExp_ number
visitPrimaryExp_ number
visitPrimaryExp_ number
visitPrimaryExp_ number
visitPrimaryExp_ number
visitCall args_list size: 9
visitCall ident: func9params
visitFuncRParams
visitPrimaryExp_ number
visitPrimaryExp_ number
visitPrimaryExp_ number
visitPrimaryExp_ number
visitPrimaryExp_ number
visitPrimaryExp_ number
visitPrimaryExp_ number
visitPrimaryExp_ number
visitPrimaryExp_ number
visitCall args_list size: 9
visitBlock done!
construct funct block done!
visitCompUnit end create new program
visitCompUnit end create new program end
------------------------------type check------------------------------
Info: visitProgramProgram
Info: visitFuncDefint @func9params(int @a, int @b, int @c, int @d, int @e, int @f, int @g, int @h, int @k)
Info: visitParamDefint @a
Info: visitParamDefint @b
Info: visitParamDefint @c
Info: visitParamDefint @d
Info: visitParamDefint @e
Info: visitParamDefint @f
Info: visitParamDefint @g
Info: visitParamDefint @h
Info: visitParamDefint @k
Info: visitBlock
Info: visitStatementReturn @a+@b+@c+@d+@e+@f+@g+@h+@k
Info: visitExpr@a+@b+@c+@d+@e+@f+@g+@h+@k
Info: visitBinopExpr@a+@b+@c+@d+@e+@f+@g+@h+@k
Info: visitExpr@a+@b+@c+@d+@e+@f+@g+@h
Info: visitBinopExpr@a+@b+@c+@d+@e+@f+@g+@h
Info: visitExpr@a+@b+@c+@d+@e+@f+@g
Info: visitBinopExpr@a+@b+@c+@d+@e+@f+@g
Info: visitExpr@a+@b+@c+@d+@e+@f
Info: visitBinopExpr@a+@b+@c+@d+@e+@f
Info: visitExpr@a+@b+@c+@d+@e
Info: visitBinopExpr@a+@b+@c+@d+@e
Info: visitExpr@a+@b+@c+@d
Info: visitBinopExpr@a+@b+@c+@d
Info: visitExpr@a+@b+@c
Info: visitBinopExpr@a+@b+@c
Info: visitExpr@a+@b
Info: visitBinopExpr@a+@b
Info: visitExpr@a
Info: visitLvalExpr@a
Info: visitExpr@b
Info: visitLvalExpr@b
Info: visitExpr@c
Info: visitLvalExpr@c
Info: visitExpr@d
Info: visitLvalExpr@d
Info: visitExpr@e
Info: visitLvalExpr@e
Info: visitExpr@f
Info: visitLvalExpr@f
Info: visitExpr@g
Info: visitLvalExpr@g
Info: visitExpr@h
Info: visitLvalExpr@h
Info: visitExpr@k
Info: visitLvalExpr@k
Info: visitReturnStmtReturn @a#1+@b#1+@c#1+@d#1+@e#1+@f#1+@g#1+@h#1+@k#1function has returnscope id1
Info: visitFuncDefint @main()
Info: visitBlock
Info: visitVarDef int @d = Call @func9params(1, 2, 3, 4, 5, 6, 7, 8, 9)+Call @func9params(1, 2, 3, 4, 5, 6, 7, 8, 100)
Info: visitExprCall @func9params(1, 2, 3, 4, 5, 6, 7, 8, 9)+Call @func9params(1, 2, 3, 4, 5, 6, 7, 8, 100)
Info: visitAssignmentExprCall @func9params(1, 2, 3, 4, 5, 6, 7, 8, 9)+Call @func9params(1, 2, 3, 4, 5, 6, 7, 8, 100)
Info: visitExprCall @func9params(1, 2, 3, 4, 5, 6, 7, 8, 9)+Call @func9params(1, 2, 3, 4, 5, 6, 7, 8, 100)
Info: visitBinopExprCall @func9params(1, 2, 3, 4, 5, 6, 7, 8, 9)+Call @func9params(1, 2, 3, 4, 5, 6, 7, 8, 100)
Info: visitExprCall @func9params(1, 2, 3, 4, 5, 6, 7, 8, 9)
Info: visiCalltExprCall @func9params(1, 2, 3, 4, 5, 6, 7, 8, 9)
Info: visitExpr1
Info: visitIntLiteralExpr1
ret->type 0x55d583ca8420
Info: visitExpr2
Info: visitIntLiteralExpr2
ret->type 0x55d583ca8de0
Info: visitExpr3
Info: visitIntLiteralExpr3
ret->type 0x55d583ca8e10
Info: visitExpr4
Info: visitIntLiteralExpr4
ret->type 0x55d583ca8e40
Info: visitExpr5
Info: visitIntLiteralExpr5
ret->type 0x55d583ca8e70
Info: visitExpr6
Info: visitIntLiteralExpr6
ret->type 0x55d583ca8ea0
Info: visitExpr7
Info: visitIntLiteralExpr7
ret->type 0x55d583ca8ed0
Info: visitExpr8
Info: visitIntLiteralExpr8
ret->type 0x55d583ca8f00
Info: visitExpr9
Info: visitIntLiteralExpr9
ret->type 0x55d583ca8f30
Info: visitExprCall @func9params(1, 2, 3, 4, 5, 6, 7, 8, 100)
Info: visiCalltExprCall @func9params(1, 2, 3, 4, 5, 6, 7, 8, 100)
Info: visitExpr1
Info: visitIntLiteralExpr1
ret->type 0x55d583ca8f60
Info: visitExpr2
Info: visitIntLiteralExpr2
ret->type 0x55d583ca8f90
Info: visitExpr3
Info: visitIntLiteralExpr3
ret->type 0x55d583ca8fc0
Info: visitExpr4
Info: visitIntLiteralExpr4
ret->type 0x55d583ca8ff0
Info: visitExpr5
Info: visitIntLiteralExpr5
ret->type 0x55d583ca9020
Info: visitExpr6
Info: visitIntLiteralExpr6
ret->type 0x55d583ca9050
Info: visitExpr7
Info: visitIntLiteralExpr7
ret->type 0x55d583ca9080
Info: visitExpr8
Info: visitIntLiteralExpr8
ret->type 0x55d583ca90b0
Info: visitExpr100
Info: visitIntLiteralExpr100
ret->type 0x55d583ca90e0
Info: visitStatementReturn @d
Info: visitExpr@d
Info: visitLvalExpr@d
Info: visitReturnStmtReturn @d#4function has returnscope id3
ast: 
Program
  int @func9params(int @a#1, int @b#1, int @c#1, int @d#1, int @e#1, int @f#1, int @g#1, int @h#1, int @k#1)
    {
      Return @a#1+@b#1+@c#1+@d#1+@e#1+@f#1+@g#1+@h#1+@k#1
    }
  int @main()
    {
      int @d#4 = Call @func9params(1, 2, 3, 4, 5, 6, 7, 8, 9)+Call @func9params(1, 2, 3, 4, 5, 6, 7, 8, 100)
      Return @d#4
    }
End of Program
--------------------------- building ir ---------------------------
visitProgram
visitFunction func9params
visitFunction param decl: a#1
visitFunction param decl: b#1
visitFunction param decl: c#1
visitFunction param decl: d#1
visitFunction param decl: e#1
visitFunction param decl: f#1
visitFunction param decl: g#1
visitFunction param decl: h#1
visitFunction param decl: k#1
visitBlock 
visitStatement
visitExpression
visitExpression
visitExpression
visitExpression
visitExpression
visitExpression
visitExpression
visitExpression
visitExpression
visitExpressionLValue a#1
visitExpression
visitExpressionLValue b#1
visitExpression
visitExpressionLValue c#1
visitExpression
visitExpressionLValue d#1
visitExpression
visitExpressionLValue e#1
visitExpression
visitExpressionLValue f#1
visitExpression
visitExpressionLValue g#1
visitExpression
visitExpressionLValue h#1
visitExpression
visitExpressionLValue k#1
function func9params has 35 regs
B0:
  prev: 
  succ: 
B1:
  prev: 
  succ: 

B0:
  prev: 
  succ: 

entryB0
reverse_postorderB0
B0:
  doms: 
  domed_by: B0 

B0:
  DF: 

visitFunction main
visitBlock 
visitExpression
visitExpression
visitExpression
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitExpression
visitExpressionintliteral
visitExpressionintliteral done
visitStatement
visitExpression
visitExpressionLValue d#4
function main has 23 regs
B2:
  prev: 
  succ: 
B3:
  prev: 
  succ: 

B2:
  prev: 
  succ: 

entryB2
reverse_postorderB2
B2:
  doms: 
  domed_by: B2 

B2:
  DF: 

1____________________________________________________
dead code elimination ----------------------------------------------------------
main
B2
LoadInt
LoadInt
LoadInt
LoadInt
LoadInt
LoadInt
LoadInt
LoadInt
LoadInt
Call
LoadInt
LoadInt
LoadInt
LoadInt
LoadInt
LoadInt
LoadInt
LoadInt
LoadInt
Call
Binary
Return
func9params
B0
Binary
Binary
Binary
Binary
Binary
Binary
Binary
Binary
Return
dead code elimination ----------------------------------------------------------
ir:
; module
define i32 @main(){
B2:
  %3 = 1
  %4 = 2
  %5 = 3
  %6 = 4
  %7 = 5
  %8 = 6
  %9 = 7
  %10 = 8
  %11 = 9
  %2 = call i32 @func9params(i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, i32 %9, i32 %10, i32 %11)
  %13 = 1
  %14 = 2
  %15 = 3
  %16 = 4
  %17 = 5
  %18 = 6
  %19 = 7
  %20 = 8
  %21 = 100
  %12 = call i32 @func9params(i32 %13, i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, i32 %19, i32 %20, i32 %21)
  %22 = add i32 %2, %12
  ret i32 %22

}
define i32 @func9params(i32, i32, i32, i32, i32, i32, i32, i32, i32){
B0:
  %21 = add i32 %1, %2
  %23 = add i32 %21, %3
  %25 = add i32 %23, %4
  %27 = add i32 %25, %5
  %29 = add i32 %27, %6
  %31 = add i32 %29, %7
  %33 = add i32 %31, %8
  %35 = add i32 %33, %9
  ret i32 %35

}
--------------------------- building riscv ---------------------------
riscv: 
    li T[-3], 1
    li T[-4], 2
    li T[-5], 3
    li T[-6], 4
    li T[-7], 5
    li T[-8], 6
    li T[-9], 7
    li T[-10], 8
    li T[-11], 9
    sw a1, 56(sp)
    mv a1, T[-3]
    mv a2, T[-4]
    mv a3, T[-5]
    mv a4, T[-6]
    mv a5, T[-7]
    mv a6, T[-8]
    mv a7, T[-9]
    sw T[-10], 0(sp)
    sw T[-11], 4(sp)
    call func9params
    mv T[-2], a0
    lw a1, 56(sp)
    li T[-13], 1
    li T[-14], 2
    li T[-15], 3
    li T[-16], 4
    li T[-17], 5
    li T[-18], 6
    li T[-19], 7
    li T[-20], 8
    li T[-21], 100
    sw a1, 56(sp)
    mv a1, T[-13]
    mv a2, T[-14]
    mv a3, T[-15]
    mv a4, T[-16]
    mv a5, T[-17]
    mv a6, T[-18]
    mv a7, T[-19]
    sw T[-20], 0(sp)
    sw T[-21], 4(sp)
    call func9params
    mv T[-12], a0
    lw a1, 56(sp)
    add T[-22], T[-2], T[-12]
    mv a0, T[-22]
    ret
    lw T[-9], 4(t1)
    lw T[-8], 0(t1)
    add T[-21], a1, a2
    add T[-23], T[-21], a3
    add T[-25], T[-23], a4
    add T[-27], T[-25], a5
    add T[-29], T[-27], a6
    add T[-31], T[-29], a7
    add T[-33], T[-31], T[-8]
    add T[-35], T[-33], T[-9]
    mv a0, T[-35]
    ret
?
func9params
func9params Main()
func9params
after compute reg_used
after prologue
end of emitend
main
main Main()
main
after compute reg_used
after prologue
end of emitend
