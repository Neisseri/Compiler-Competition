--------------------------- building ast ---------------------------
parse tree: 
(compUnit 
        (compUnitItem 
            (funcDef 
                (funcType 
                    (bType int)) get_one ( 
                (funcFParams 
                    (funcFParam 
                        (bType int) a)) ) 
                (block { 
                    (blockItem 
                        (stmt return 
                            (exp 
                                (addExp 
                                    (addExp 
                                        (mulExp 
                                            (unaryExp 
                                                (primaryExp 
                                                    (lVal a))))) + 
                                    (mulExp 
                                        (unaryExp 
                                            (primaryExp 
                                                (number 
                                                    (intConst 1))))))) ;)) }))) 
        (compUnitItem 
            (funcDef 
                (funcType 
                    (bType int)) deepWhileBr ( 
                (funcFParams 
                    (funcFParam 
                        (bType int) a) , 
                    (funcFParam 
                        (bType int) b)) ) 
                (block { 
                    (blockItem 
                        (decl 
                            (varDecl 
                                (bType int) 
                                (varDef c) ;))) 
                    (blockItem 
                        (stmt 
                            (lVal c) = 
                            (exp 
                                (addExp 
                                    (addExp 
                                        (mulExp 
                                            (unaryExp 
                                                (primaryExp 
                                                    (lVal a))))) + 
                                    (mulExp 
                                        (unaryExp 
                                            (primaryExp 
                                                (lVal b)))))) ;)) 
                    (blockItem 
                        (stmt while ( 
                            (cond 
                                (lOrExp 
                                    (lAndExp 
                                        (eqExp 
                                            (relExp 
                                                (relExp 
                                                    (addExp 
                                                        (mulExp 
                                                            (unaryExp 
                                                                (primaryExp 
                                                                    (lVal c)))))) < 
                                                (addExp 
                                                    (mulExp 
                                                        (unaryExp 
                                                            (primaryExp 
                                                                (number 
                                                                    (intConst 75))))))))))) ) 
                            (stmt 
                                (block { 
                                    (blockItem 
                                        (decl 
                                            (varDecl 
                                                (bType int) 
                                                (varDef d) ;))) 
                                    (blockItem 
                                        (stmt 
                                            (lVal d) = 
                                            (exp 
                                                (addExp 
                                                    (mulExp 
                                                        (unaryExp 
                                                            (primaryExp 
                                                                (number 
                                                                    (intConst 42))))))) ;)) 
                                    (blockItem 
                                        (stmt if ( 
                                            (cond 
                                                (lOrExp 
                                                    (lAndExp 
                                                        (eqExp 
                                                            (relExp 
                                                                (relExp 
                                                                    (addExp 
                                                                        (mulExp 
                                                                            (unaryExp 
                                                                                (primaryExp 
                                                                                    (lVal c)))))) < 
                                                                (addExp 
                                                                    (mulExp 
                                                                        (unaryExp 
                                                                            (primaryExp 
                                                                                (number 
                                                                                    (intConst 100))))))))))) ) 
                                            (stmt 
                                                (block { 
                                                    (blockItem 
                                                        (stmt 
                                                            (lVal c) = 
                                                            (exp 
                                                                (addExp 
                                                                    (addExp 
                                                                        (mulExp 
                                                                            (unaryExp 
                                                                                (primaryExp 
                                                                                    (lVal c))))) + 
                                                                    (mulExp 
                                                                        (unaryExp 
                                                                            (primaryExp 
                                                                                (lVal d)))))) ;)) })))) })))) 
                    (blockItem 
                        (stmt return 
                            (exp 
                                (addExp 
                                    (mulExp 
                                        (unaryExp 
                                            (primaryExp ( 
                                                (exp 
                                                    (addExp 
                                                        (mulExp 
                                                            (unaryExp 
                                                                (primaryExp 
                                                                    (lVal c)))))) )))))) ;)) }))) 
        (compUnitItem 
            (funcDef 
                (funcType 
                    (bType int)) main ( ) 
                (block { 
                    (blockItem 
                        (decl 
                            (varDecl 
                                (bType int) 
                                (varDef p) ;))) 
                    (blockItem 
                        (stmt 
                            (lVal p) = 
                            (exp 
                                (addExp 
                                    (mulExp 
                                        (unaryExp 
                                            (primaryExp 
                                                (number 
                                                    (intConst 2))))))) ;)) 
                    (blockItem 
                        (stmt 
                            (lVal p) = 
                            (exp 
                                (addExp 
                                    (mulExp 
                                        (unaryExp deepWhileBr ( 
                                            (funcRParams 
                                                (funcRParam 
                                                    (exp 
                                                        (addExp 
                                                            (mulExp 
                                                                (unaryExp 
                                                                    (primaryExp 
                                                                        (lVal p))))))) , 
                                                (funcRParam 
                                                    (exp 
                                                        (addExp 
                                                            (mulExp 
                                                                (unaryExp 
                                                                    (primaryExp 
                                                                        (lVal p)))))))) ))))) ;)) 
                    (blockItem 
                        (stmt 
                            (exp 
                                (addExp 
                                    (mulExp 
                                        (unaryExp putint ( 
                                            (funcRParams 
                                                (funcRParam 
                                                    (exp 
                                                        (addExp 
                                                            (mulExp 
                                                                (unaryExp 
                                                                    (primaryExp 
                                                                        (lVal p)))))))) ))))) ;)) 
                    (blockItem 
                        (stmt return 
                            (exp 
                                (addExp 
                                    (mulExp 
                                        (unaryExp 
                                            (primaryExp 
                                                (number 
                                                    (intConst 0))))))) ;)) }))) <EOF>)
visitCompUnit
visitCompUnit: funcDef
construct funct block: get_one
visitPrimaryExp_ number
visitBlock done!
construct funct block done!
visitCompUnit: funcDef
construct funct block: deepWhileBr
visitVarDecl: int start
visitVarDecl: ident: c
visitAssign done!
visitPrimaryExp_ number
visit block stmt
visitVarDecl: int start
visitVarDecl: ident: d
visitPrimaryExp_ number
visitAssign done!
visitPrimaryExp_ number
visit block stmt
visitAssign done!
visitBlock done!
visitBlock done!
visitPrimaryExp_ exp
visitBlock done!
construct funct block done!
visitCompUnit: funcDef
construct funct block: main
visitVarDecl: int start
visitVarDecl: array dim_size=2
visitPrimaryExp_ number
visitPrimaryExp_ number
visitVarDecl: ident: arr
visitVarDecl: initVal
visitInit
visitCall ident: param16
visitFuncRParams
visitCall ident: getint
visitCall args_list size: 0
visitCall ident: getint
visitCall args_list size: 0
visitCall ident: getint
visitCall args_list size: 0
visitCall ident: getint
visitCall args_list size: 0
visitCall ident: getint
visitCall args_list size: 0
visitCall ident: getint
visitCall args_list size: 0
visitCall ident: getint
visitCall args_list size: 0
visitCall ident: getint
visitCall args_list size: 0
visitCall ident: getint
visitCall args_list size: 0
visitCall ident: getint
visitCall args_list size: 0
visitCall ident: getint
visitCall args_list size: 0
visitCall ident: getint
visitCall args_list size: 0
visitCall ident: getint
visitCall args_list size: 0
visitCall ident: getint
visitCall args_list size: 0
visitCall ident: getint
visitCall args_list size: 0
visitCall ident: getint
visitCall args_list size: 0
visitCall args_list size: 16
visitInit
visitPrimaryExp_ number
visitPrimaryExp_ number
visitCall args_list size: 2
visitBlock done!
construct funct block done!
visitCompUnit end create new program
visitCompUnit end create new program end
------------------------------type check------------------------------
Info: visitProgramProgram
Info: visitFuncDefint @param16(int @a1, int @a2, int @a3, int @a4, int @a5, int @a6, int @a7, int @a8, int @a9, int @a10, int @a11, int @a12, int @a13, int @a14, int @a15, int @a16)
Info: visitParamDefint @a1
Info: visitParamDefint @a2
Info: visitParamDefint @a3
Info: visitParamDefint @a4
Info: visitParamDefint @a5
Info: visitParamDefint @a6
Info: visitParamDefint @a7
Info: visitParamDefint @a8
Info: visitParamDefint @a9
Info: visitParamDefint @a10
Info: visitParamDefint @a11
Info: visitParamDefint @a12
Info: visitParamDefint @a13
Info: visitParamDefint @a14
Info: visitParamDefint @a15
Info: visitParamDefint @a16
Info: visitBlock
Info: visitStatementReturn 0
Info: visitExpr0
Info: visitIntLiteralExpr0
ret->type 0x55b87e941e00
Info: visitFuncDefint @main()
Info: visitBlock
Info: visitVarDef int @arr = {{Call @param16(Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint()), 8848}}
Info: visitDims 32
Info: visitExpr32
Info: visitIntLiteralExpr32
ret->type 0x55b87e942490
Info: visitDims 2
Info: visitExpr2
Info: visitIntLiteralExpr2
ret->type 0x55b87e9424c0
Info: visitExpr{{Call @param16(Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint()), 8848}}
Info: visitAssignmentExpr{{Call @param16(Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint()), 8848}}
Info: visitExpr{Call @param16(Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint()), 8848}
Info: visitAssignmentExpr{Call @param16(Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint()), 8848}
Info: visitExprCall @param16(Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint())
Info: visitAssignmentExprCall @param16(Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint())
Info: visitExprCall @param16(Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint())
Info: visiCalltExprCall @param16(Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint(), Call @getint())
Info: visitExprCall @getint()
Info: visiCalltExprCall @getint()
Info: use of undeclared function getint
